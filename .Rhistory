uniqueVector <- vector("numeric")
for(i in seq_along(ordered)) {
meanAtRun <- vector("numeric")
subset <- cbind(subset, dataset[, ordered[i]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
meanAtRun <- mean(meansVector)
meansVector <- c(meansVector, meanAtRun)
}
meansVector
meanAtRun <- vector("numeric")
subset <- cbind(subset, dataset[, ordered[1]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
count
uniqueVector
rm(uniqueVector)
rm(meanAtRun)
rm(meansVector)
rm(count)
rm(subset)
ordered <- sample(colnames(dataset))
subset <- vector()
meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
meanAtRun <- vector("numeric")
subset <- cbind(subset, dataset[, ordered[1]])
count <- length(which(rowSums(subset) == 1))
count
length(count)
uniqueVector <- c(uniqueVector, count)
meanAtRun <- mean(meansVector)
mean(89)
ordered <- sample(colnames(dataset))
subset <- vector()
#meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
subset <- cbind(subset, dataset[, ordered[1]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
subset <- cbind(subset, dataset[, ordered[2]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
subset <- cbind(subset, dataset[, ordered[3]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
ordered <- sample(colnames(dataset))
subset <- vector()
#meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
## for loop
for(i in seq_along(ordered)) {
subset <- cbind(subset, dataset[, ordered[3]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
}
uniqueVector
ordered <- sample(colnames(dataset))
subset <- vector()
#meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
for(i in seq_along(ordered)) {
subset <- cbind(subset, dataset[, ordered[i]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
}
uniqueVector
plot(uniqueVector)
ordered <- sample(colnames(dataset))
subset <- vector()
meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
## for loop
for(i in seq_along(ordered)) {
subset <- cbind(subset, dataset[, ordered[i]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
}
for(i in seq_along(uniqueVector)) {
meanAtRun <- mean(uniqueVector[1:i])
meansVector <- c(meansVector, meanAtRun)
}
meansVector
plot(meansVector
)
ordered <- sample(colnames(dataset))
subset <- vector()
meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
## uniques
for(i in seq_along(ordered)) {
subset <- cbind(subset, dataset[, ordered[i]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
}
## means
for(i in seq_along(uniqueVector)) {
meanAtRun <- mean(uniqueVector[1:i])
meansVector <- c(meansVector, meanAtRun)
}
meansVector
ordered <- sample(colnames(dataset))
subset <- vector()
meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
## uniques
for(i in seq_along(ordered)) {
subset <- cbind(subset, dataset[, ordered[i]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
}
## means
for(i in seq_along(uniqueVector)) {
meanAtRun <- mean(uniqueVector[1:i])
meansVector <- c(meansVector, meanAtRun)
}
meansVector
ordered <- sample(colnames(dataset))
subset <- vector()
meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
## uniques
for(i in seq_along(ordered)) {
subset <- cbind(subset, dataset[, ordered[i]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
}
## means
for(i in seq_along(uniqueVector)) {
meanAtRun <- mean(uniqueVector[1:i])
meansVector <- c(meansVector, meanAtRun)
}
meansVector
ordered <- sample(colnames(dataset))
subset <- vector()
meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
## uniques
for(i in seq_along(ordered)) {
subset <- cbind(subset, dataset[, ordered[i]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
}
## means
for(i in seq_along(uniqueVector)) {
meanAtRun <- mean(uniqueVector[1:i])
meansVector <- c(meansVector, meanAtRun)
}
meansVector
rm(list = ls())
data(BCI)
uniqueS <- function(dataset, resampling = FALSE, replicates, species = "rows") {
if(species == "columns") {
dataset <- t(dataset)
}
unirep <- function(dataset) {
## objects needed
ordered <- sample(colnames(dataset))
subset <- vector()
meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
## uniques
for(i in seq_along(ordered)) {
subset <- cbind(subset, dataset[, ordered[i]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
}
## means
for(i in seq_along(uniqueVector)) {
meanAtRun <- mean(uniqueVector[1:i])
meansVector <- c(meansVector, meanAtRun)
}
output <- cbind(seq_along(meansVector), uniqueVector, meansvector)
colnames(output) <- c("Run", "Uniques", "Mean")
print(output)
}
if(resampling == TRUE) {
repeats <- vector("numeric")
for(i in 1:replicates) {
loop <- unirep(dataset)
repeats <- c(repeats, loop)
}
print(repeats)
}
else {
unique <- unirep(dataset)
print(unique)
}
}
uni <- uniqueS(dataset, resampling = FALSE, species = rows)
uni <- uniqueS(dataset, resampling = FALSE, species = "rows")
dataset <- t(BCI)
uni <- uniqueS(dataset, resampling = FALSE, species = "rows")
uniqueS <- function(dataset, resampling = FALSE, replicates, species = "rows") {
if(species == "columns") {
dataset <- t(dataset)
}
unirep <- function(dataset) {
## objects needed
ordered <- sample(colnames(dataset))
subset <- vector()
meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
## uniques
for(i in seq_along(ordered)) {
subset <- cbind(subset, dataset[, ordered[i]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
}
## means
for(i in seq_along(uniqueVector)) {
meanAtRun <- mean(uniqueVector[1:i])
meansVector <- c(meansVector, meanAtRun)
}
output <- cbind(seq_along(meansVector), uniqueVector, meansVector)
colnames(output) <- c("Run", "Uniques", "Mean")
print(output)
}
if(resampling == TRUE) {
repeats <- vector("numeric")
for(i in 1:replicates) {
loop <- unirep(dataset)
repeats <- c(repeats, loop)
}
print(repeats)
}
else {
unique <- unirep(dataset)
print(unique)
}
}
uni <- uniqueS(dataset, resampling = FALSE, species = "rows")
uni <- uniqueS(dataset, resampling = T, replicates = 10, species = "rows")
uni
length(uni)
rm(uniqueS)
rm(uni)
unirep <- function(dataset) {
## objects needed
ordered <- sample(colnames(dataset))
subset <- vector()
meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
## uniques
for(i in seq_along(ordered)) {
subset <- cbind(subset, dataset[, ordered[i]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
}
## means
for(i in seq_along(uniqueVector)) {
meanAtRun <- mean(uniqueVector[1:i])
meansVector <- c(meansVector, meanAtRun)
}
output <- cbind(seq_along(meansVector), uniqueVector, meansVector)
colnames(output) <- c("Run", "Uniques", "Mean")
print(output)
}
repeats <- vector("numeric")
for(i in 1:10) {
loop <- unirep(dataset)
repeats <- c(repeats, loop)
}
rm(i, repeats, unirep)
rm(loop)
uniqueS <- function(dataset, resampling = FALSE, replicates, species = "rows") {
if(species == "columns") {
dataset <- t(dataset)
}
unirep <- function(dataset) {
## objects needed
ordered <- sample(colnames(dataset))
subset <- vector()
meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
## uniques
for(i in seq_along(ordered)) {
subset <- cbind(subset, dataset[, ordered[i]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
}
## means
for(i in seq_along(uniqueVector)) {
meanAtRun <- mean(uniqueVector[1:i])
meansVector <- c(meansVector, meanAtRun)
}
output <- cbind(seq_along(meansVector), uniqueVector, meansVector)
colnames(output) <- c("Run", "Uniques", "Mean")
print(output)
}
if(resampling == TRUE) {
repeats <- vector("numeric")
for(i in 1:replicates) {
loop <- unirep(dataset)
repeats <- c(repeats, loop[nrow(loop), 3])
}
print(repeats)
}
else {
unique <- unirep(dataset)
print(unique)
}
}
uni <- uniqueS(dataset, resampling = TRUE, replicates = 10, species = "rows")
uniqueS <- function(dataset, resampling = FALSE, replicates, species = "rows") {
if(species == "columns") {
dataset <- t(dataset)
}
unirep <- function(dataset) {
## objects needed
ordered <- sample(colnames(dataset))
subset <- vector()
meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
## uniques
for(i in seq_along(ordered)) {
subset <- cbind(subset, dataset[, ordered[i]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
}
## means
for(i in seq_along(uniqueVector)) {
meanAtRun <- mean(uniqueVector[1:i])
meansVector <- c(meansVector, meanAtRun)
}
output <- cbind(seq_along(meansVector), uniqueVector, meansVector)
colnames(output) <- c("Run", "Uniques", "Mean")
return(output)
}
if(resampling == TRUE) {
repeats <- vector("numeric")
for(i in 1:replicates) {
loop <- unirep(dataset)
repeats <- c(repeats, loop[nrow(loop), 3])
}
print(repeats)
}
else {
unique <- unirep(dataset)
print(unique)
}
}
uni <- uniqueS(dataset, resampling = TRUE, replicates = 10, species = "rows")
plot(uni)
medias <- vector("numeric")
for(i in seq_along(uni)) {
meanAtRun <- mean(uniqueVector[1:i])
meansVector <- c(medias, meanAtRun)
}
medias <- vector("numeric")
for(i in seq_along(uni)) {
meanAtRun <- mean(uni[1:i])
meansVector <- c(medias, meanAtRun)
}
medias
uni <- uniqueS(dataset, resampling = TRUE, replicates = 10, species = "rows")
medias <- vector("numeric")
medias <- vector("numeric")
for(i in seq_along(uni)) {
meanAtRun <- mean(uni[1:i])
medias <- c(medias, meanAtRun)
}
medias
plot(medias)
uni <- uniqueS(dataset, resampling = TRUE, replicates = 100, species = "rows")
medias <- vector("numeric")
for(i in seq_along(uni)) {
meanAtRun <- mean(uni[1:i])
medias <- c(medias, meanAtRun)
}
plot(medias)
uni <- uniqueS(dataset, resampling = TRUE, replicates = 1000, species = "rows")
medias <- vector("numeric")
for(i in seq_along(uni)) {
meanAtRun <- mean(uni[1:i])
medias <- c(medias, meanAtRun)
}
plot(medias)
abundToIncidence <- function(dataset) {
for(i in seq_along(colnames(dataset))) {
count <- which(dataset[, i] > 0)
dataset[count, i] <- 1
}
}
dataset <- t(BCI)
dataset <- abundToIncidence(dataset)
dataset
dataset <- t(BCI)
abundToIncidence(dataset)
print(abundToIncidence(dataset))
abundToIncidence <- function(dataset) {
for(i in seq_along(colnames(dataset))) {
count <- which(dataset[, i] > 0)
dataset[count, i] <- 1
}
print(dataset)
}
abundToIncidence(dataset)
dataset <- abundToIncidence(dataset)
head(dataset)
uni <- uniqueS(dataset, resampling = TRUE, replicates = 1000, species = "rows")
medias <- vector("numeric")
for(i in seq_along(uni)) {
meanAtRun <- mean(uni[1:i])
medias <- c(medias, meanAtRun)
}
plot(medias)
abundToIncidence <- function(dataset) {
for(i in seq_along(colnames(dataset))) {
count <- which(dataset[, i] > 0)
dataset[count, i] <- 1
}
print(dataset)
}
library(vegan)
data(BCI)
datset <- t(BCI)
rownames(dataset)
dataset <- t(BCI)
rm(datset)
rownames(dataset)
uniqueS <- function(dataset, resampling = FALSE, replicates, species = "rows") {
if(species == "columns") {
dataset <- t(dataset)
}
unirep <- function(dataset) {
## objects needed
ordered <- sample(colnames(dataset))
subset <- vector()
meansVector <- vector("numeric")
uniqueVector <- vector("numeric")
## uniques
for(i in seq_along(ordered)) {
subset <- cbind(subset, dataset[, ordered[i]])
count <- length(which(rowSums(subset) == 1))
uniqueVector <- c(uniqueVector, count)
}
## means
for(i in seq_along(uniqueVector)) {
meanAtRun <- mean(uniqueVector[1:i])
meansVector <- c(meansVector, meanAtRun)
}
output <- cbind(seq_along(meansVector), uniqueVector, meansVector)
colnames(output) <- c("Run", "Uniques", "Mean")
return(output)
}
if(resampling == TRUE) {
repeats <- vector("numeric")
for(i in 1:replicates) {
loop <- unirep(dataset)
repeats <- c(repeats, loop[nrow(loop), 3])
}
print(repeats)
}
else {
unique <- unirep(dataset)
print(unique)
}
}
uni <- uniqueS(dataset)
uni <- uniqueS(dataset)
reps <- uniqueS(dataset, resampling = T, replicates = 1000)
sd(reps)
plot(reps)
medias <- vector("numeric")
for(i in seq_along(reps)) {
meanAtRun <- mean(reps[1:i])
medias <- c(medias, meanAtRun)
}
medias
plot(medias)
medias
uni
reps
names(reps) <- NULL
reps
sd(reps)
boxplot(reps)
boxplot(medias)
hist(reps)
hist(medias)
pooledMean <- function(x) {
means <- vector("numeric")
for(i in seq_along(x)) {
meanAtRun <- mean(x[1:i])
means <- c(means, meanAtRun)
}
return(means)
}
medias <- pooledMean(reps)
medias
plot(medias)
setwd("/home/balleng/Documentos/Programming/Intro2R")
var1 = rep(4, times = 5)
var2 = c("a", "b", "c", "d", "e")
var3 = c(TRUE, FALSE, FALSE, TRUE, FALSE)
var4 = rnorm(0, 1, 5)
length(var1)
length(var2)
length(var3)
length(var4)
str(dir())
str(dir
)
dir
render("Session1.Rpres", "all")
install.packages(rmarkdown)
install.packages("rmarkdown")
library(rmarkdown)
render("Session1.Rpres", "all")
render("Session1.Rpres", "pdf_document")
library(xlsx)
